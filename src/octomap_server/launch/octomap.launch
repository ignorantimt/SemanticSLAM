<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  

-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<remap from="cloud_in" to="/SG_SLAM/Local_Point_Clouds" />
		<param name="frame_id" type="string" value="map" />
		<param name="resolution" value="0.03" />
    		<param name="sensor_model/hit" value="0.7" />
                <param name="sensor_model/miss" value="0.4" />
		<param name="sensor_model/max" value="0.97" />
		<param name="sensor_model/min" value="0.12" />
		<param name="sensor_model/max_range" value="-1.0" />
		<param name="height_map" type="bool" value="false" />
		<param name="colored_map" type="bool" value="true" />
		<param name="latch" type="bool" value="false" />
		<param name="occupancy_min_z" type="double" value="-1.5" />
		<param name="occupancy_max_z" type="double" value="1.5" />


		<param name="filter_ground" type="bool" value="false" />
		<param name="filter_speckles" type="bool" value="false" />
		<param name="ground_filter/distance" type="double" value="0.05" />   
		<param name="ground_filter/angle" type="double" value="0.15" />      
		<param name="ground_filter/plane_distance" type="double" value="0.05" /> 
		<param name="pointcloud_min_z" type="double" value="-5.0" />
		<param name="pointcloud_max_z" type="double" value="5.0" />
	</node>

</launch>
